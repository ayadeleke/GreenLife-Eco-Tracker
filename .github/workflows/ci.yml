name: GreenLife_CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main
  merge_group:

jobs:
  backend-lint:
    name: Backend Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        working-directory: ./greenlife_backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8

      - name: Run flake8
        working-directory: ./greenlife_backend
        run: flake8 tracker config

  backend-format:
    name: Backend format
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        working-directory: ./greenlife_backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black

      - name: Run black
        working-directory: ./greenlife_backend
        run: black tracker config

  backend-security:
    name: Backend Security
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install security tools
        working-directory: ./greenlife_backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety

      - name: Bandit security scan
        working-directory: ./greenlife_backend
        run: bandit -r tracker config

      - name: Safety vulnerability check
        working-directory: ./greenlife_backend
        run: safety scan --full-report
        continue-on-error: true

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: greenlife_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      DB_NAME: greenlife_db
      DB_USER: root
      DB_PASSWORD: root
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        working-directory: ./greenlife_backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL
        run: |
          sudo apt-get install -y mysql-client
          until mysqladmin ping -h"127.0.0.1" --silent; do
            sleep 1
          done
          sleep 5

      - name: Run Django tests
        working-directory: ./greenlife_backend
        run: python manage.py test

  frontend-lint:
    name: Frontend Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: ./greenlife-frontend
        run: npm ci

      - name: Run ESLint
        working-directory: ./greenlife-frontend
        run: npx eslint src --max-warnings=0

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: ./greenlife-frontend
        run: npm ci

      - name: Run frontend tests
        working-directory: ./greenlife-frontend
        run: npm test
